{ config, pkgs, lib, ... }: {
  imports = [
    ./shell/alacritty.nix
    ./shell/fish.nix
    ./shell/vim.nix
    ./desktop/xresources.nix
  ];

  programs.home-manager.enable = true;
  manual.manpages.enable = true;
  # allow installation of fonts
  fonts.fontconfig.enable = true;

  xsession = {
    enable = true;
    # script gets generated by nixos
    scriptPath = ".hm-xsession";
    windowManager.i3 = {
      enable = true;
      package = pkgs.i3-gaps;
      # disable generation of default config
      config = null;
      # use config from file
      extraConfig =
        lib.strings.fileContents ./desktop/i3.config;
    };
  };

  home = {
    keyboard.layout = "eu";
    sessionVariables.GTK_THEME = "Generated";

    packages = with pkgs; [
      # system
      nerdfonts corefonts
      pavucontrol
      pcmanfm
      # terminal
      fd ripgrep
      #thefuck # TODO integration into shell via module
      universal-ctags
      podman podman-compose
      bitwarden-cli
      # programs
      ferdi
      blender
    ];
  };

  gtk = {
    enable = true;

    font = {
      name = "Source Sans Pro 9";
      package = pkgs.source-sans-pro;
    };

    iconTheme = {
      name = "Papirus-Dark";
      package = pkgs.papirus-icon-theme;
    };
    theme = {
      name = "Generated";
      package = pkgs.generated-gtk-theme;
    };

    gtk3.extraConfig.gtk-cursor-theme-name = "breeze";
  };

  programs = {
    git = {
      enable = true;
      userEmail = "fbreuer@pm.me";
      userName = "Felix Breuer";
      extraConfig = {
        init = { defaultBranch = "main"; };
      };
    };

    autojump = {
      enable = true;
      enableFishIntegration = true;
    };

    lsd = {
      enable = true;
      enableAliases = true;
    };

    bat = {
      enable = true;
      # TODO check if theme gets picked up
      config = { theme = "base16"; };
    };

    htop = {
      enable = true;
      treeView = true;
    };

    tmux = {
      enable = true;
      plugins = with pkgs; [ tmuxPlugins.nord ];
      extraConfig =
        lib.strings.fileContents ./shell/.tmux.conf;
    };

    fzf = {
      enable = true;
      enableFishIntegration = true;
      defaultCommand = "fd --type f --hidden --follow --exclude .git --exclude .vim --exclude .cache";
    };

    rofi = {
      enable = true;
      theme = "/etc/nixos/desktop/rofi.rasi";
    };

    firefox = {
      enable = true;
      # TODO fix this
      #profiles.felix = {
        #id = 4711;
        #isDefault = true;
        #settings = {
          #"browser.fullscreen.autohide" = false;
          #"ui.context_menus.after_mouseup" = true;
        #};
      #};
    };

    obs-studio = {
      enable = true;
      #plugins = [ pkgs.obs-linuxbrowser ];
    };
  };

  services = {
    polybar = {
      enable = true;
      package = pkgs.polybar.override {
        i3GapsSupport = true;
        alsaSupport = true;
      };
      config = "/etc/nixos/desktop/polybar";
      script = "polybar bar &";
    };
  };
}
